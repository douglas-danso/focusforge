[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "focusforge-backend"
version = "0.1.0"
description = "FocusForge Backend API - Productivity and focus management API"
authors = [{ name = "Douglas Danso" }]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [

    "fastapi (>=0.115.12,<0.116.0)",
    "uvicorn[standard] (>=0.24.0,<0.25.0)",
    "pydantic (>=2.4.2,<3.0.0)",
    "pydantic-settings (>=2.0.3,<3.0.0)",
    "python-multipart (>=0.0.6,<1.0.0)",
    "python-jose[cryptography] (>=3.3.0,<4.0.0)",
    "passlib[bcrypt] (>=1.7.4,<2.0.0)",
    "python-dotenv (>=1.0.0,<2.0.0)",
    "langchain (>=0.3.25,<0.4.0)",
    "langchain-community (>=0.3.23,<0.4.0)",
    "openai (>=1.77.0,<2.0.0)",
    "langchain-openai (>=0.3.16,<0.4.0)",
    "spotipy (>=2.22.1,<3.0.0)",
    "pymongo (>=4.6.0,<5.0.0)",
    "motor (>=3.3.2,<4.0.0)",
    "redis (>=5.0.1,<6.0.0)",
    "celery (>=5.3.4,<6.0.0)",
    "httpx (>=0.25.2,<1.0.0)",
    "websockets (>=12.0,<13.0)",
]

[project.optional-dependencies]
dev = [
    "pytest (>=7.4.3,<8.0.0)",
    "pytest-asyncio (>=0.21.1,<1.0.0)",
    "pytest-cov (>=4.1.0,<5.0.0)",
    "black (>=23.11.0,<24.0.0)",
    "isort (>=5.12.0,<6.0.0)",
    "flake8 (>=6.1.0,<7.0.0)",
    "mypy (>=1.7.1,<2.0.0)",
    "pre-commit (>=3.5.0,<4.0.0)",
]

test = [
    "pytest (>=7.4.3,<8.0.0)",
    "pytest-asyncio (>=0.21.1,<1.0.0)",
    "pytest-cov (>=4.1.0,<5.0.0)",
    "httpx (>=0.25.2,<1.0.0)",
    "mongomock (>=4.1.2,<5.0.0)",
]

[project.urls]
Homepage = "https://github.com/douglas-danso/focusforge"
Repository = "https://github.com/douglas-danso/focusforge.git"
Issues = "https://github.com/douglas-danso/focusforge/issues"

[tool.hatch.version]
path = "app/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-asyncio", 
    "pytest-cov",
    "black",
    "isort",
    "flake8",
    "mypy",
]

[tool.hatch.envs.default.scripts]
start = "uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
dev = "uvicorn main:app --reload --host 0.0.0.0 --port 8000 "
test = "pytest {args:tests}"
test-cov = "pytest --cov=app --cov-report=html --cov-report=term-missing {args:tests}"
lint = [
    "flake8 .",
    "black --check .",
    "isort --check-only .",
]
format = [
    "black .",
    "isort .",
]
type-check = "mypy app"

[tool.hatch.envs.test]
dependencies = [
    "pytest",
    "pytest-asyncio",
    "pytest-cov", 
    "httpx",
    "mongomock",
]

[tool.hatch.envs.test.scripts]
run = "pytest {args:tests}"
cov = "pytest --cov=app --cov-report=html --cov-report=term-missing {args:tests}"

[tool.black]
target-version = ["py311"]
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
asyncio_mode = "auto"
